# -- Generic Cilium Agent Configurations

# Enable/disable debug logging
#debug:
  #enabled: true
  # -- Configure verbosity levels for debug logging
  # This option is used to enable debug messages for operations related to such
  # sub-system such as (e.g. kvstore, envoy, datapath or policy), and flow is
  # for enabling debug messages emitted per request, message and connection.
  #
  # Applicable values:
  # - flow
  # - kvstore
  # - envoy
  # - datapath
  # - policy
  #verbose: ~

# Configure unique cluster name & ID (used for ClusterMesh in the future)
cluster:
  name: ${CLUSTER_NAME}
  id: ${CLUSTER_ID}

# Routing/encapsulation mode
tunnelProtocol: vxlan
routingMode: tunnel

# KubeProxyReplacement
kubeProxyReplacement: "true"
k8sServiceHost: ${KUBE_APISERVER_HOST}
k8sServicePort: ${KUBE_APISERVER_PORT}

# -- Monitoring and Flow Visibility

# Enable Cilium Hubble to gain visibility
hubble:
  enabled: true
  metrics:
    enabled:
    # https://docs.cilium.io/en/stable/observability/metrics/#hubble-exported-metrics
    # Remove `;query` from the `dns` line for production -> bad metrics cardinality
    - dns:labelsContext=source_namespace,destination_namespace;query
    - drop:labelsContext=source_namespace,destination_namespace
    - tcp:labelsContext=source_namespace,destination_namespace
    - port-distribution:labelsContext=source_namespace,destination_namespace
    - icmp:labelsContext=source_namespace,destination_namespace;sourceContext=workload-name|reserved-identity;destinationContext=workload-name|reserved-identity
    - flow:sourceContext=workload-name|reserved-identity;destinationContext=workload-name|reserved-identity;labelsContext=source_namespace,destination_namespace
    - "httpV2:exemplars=true;labelsContext=source_ip,source_namespace,source_workload,destination_ip,destination_namespace,destination_workload,traffic_direction;sourceContext=workload-name|reserved-identity;destinationContext=workload-name|reserved-identity"
    - "policy:sourceContext=app|workload-name|pod|reserved-identity;destinationContext=app|workload-name|pod|dns|reserved-identity;labelsContext=source_namespace,destination_namespace"
  relay:
    enabled: true

# Enable Cilium Operator metrics
operator:
  prometheus:
    enabled: true

# Enable Cilium Agent metrics
prometheus:
  enabled: true

# -- Talos Linux Specifics
# https://www.talos.dev/v1.5/kubernetes-guides/network/deploying-cilium/

# Configure IPAM/PodCIDR
ipam:
  # Ensure to not assign PodCIDRs to Nodes via "controllerManager.extraArgs.allocate-node-cidrs" in case you want to use Cilium's default IPAM mode, cluster-pool, instead of 'kubernetes'. Use the provided 'allocate_node_cidrs' Terraform variable to steer this behaviour.
  #mode: kubernetes
  mode: cluster-pool
  operator:
    clusterPoolIPv4PodCIDRList:
    - ${POD_CIDR}

# Configure cgroup related configuration
cgroup:
  # Cilium doesn't need to mount the cgroup2 filesystem, as it's already there on Talos Linux. Let's simply mount the correct path from Talos.
  autoMount:
    enabled: false
  hostRoot: /sys/fs/cgroup
# Remove "SYS_MODULE" because of https://www.talos.dev/v1.5/learn-more/process-capabilities/
securityContext:
  capabilities:
    ciliumAgent:
    - CHOWN
    - KILL
    - NET_ADMIN
    - NET_RAW
    - IPC_LOCK
    - SYS_ADMIN
    - SYS_RESOURCE
    - DAC_OVERRIDE
    - FOWNER
    - SETGID
    - SETUID
    cleanCiliumState:
    - NET_ADMIN
    - SYS_ADMIN
    - SYS_RESOURCE